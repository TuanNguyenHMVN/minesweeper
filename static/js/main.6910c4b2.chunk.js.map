{"version":3,"sources":["components/LevelSelection.js","components/Cell.js","components/Clock.js","components/Board.js","components/Result.js","App.js","serviceWorker.js","redux.js","api.js","sagas.js","index.js"],"names":["LevelSelection","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onSelectLevel","lv","props","inherits","createClass","key","value","_this2","level","react_default","a","createElement","style","background","padding","row","gutter","col","span","offset","card","title","bordered","map","es_button","type","block","onClick","e","React","Component","Cell","onRevealCell","cell","isRevealed","isMine","neighbour","className","getValue","Clock","state","second","timer","setInterval","setState","clearInterval","d","Number","h","Math","floor","m","s","hDisplay","mDisplay","sDisplay","convertTime","Board","getHidden","updatedData","mineArray","datarow","dataitem","push","onShowResult","gameStatus","clock","current","startGame","stopTimer","onReplay","boardData","initBoardData","width","height","mines","createRef","w","board","createBoardWithMines","getNeighbours","data","i","j","x","y","isEmpty","updatedBoard","mine","surfingBoard","n","neightbourList","xOffset","yOffset","_this3","Cell_Cell","handleCellClick","_this4","revealEmpty","_this5","setTimeout","startTimer","revealAllBoard","revealBoard","justify","Clock_Clock","ref","renderBoard","Result","loading","visible","content","onBackToHome","_isMounted","_this$props","modal","onOk","onCancel","onViewBoard","footer","App","renderContent","_this$state","selectedLevel","modalVisible","modalContent","Fragment","Board_Board","mineList","LevelSelection_LevelSelection","Result_Result","getMines","status","time","clearMines","spin","connect","error","dispatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","GET_MINES","GET_MINES_SUCCESS","GET_MINES_FAIL","CLEAR_MINES","CLEAR_MINES_SUCCESS","initialState","success","getMinesApi","size","axios","method","url","watcherSaga","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","_ref","response","_context2","sent","msg","put","_marked2","_context3","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","undefined","action","objectSpread","compose","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6910c4b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button } from 'antd';\r\n\r\n\r\nexport class LevelSelection extends React.Component {\r\n\r\n    render(){\r\n        const { level } = this.props;\r\n        return (\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Row gutter={16}>\r\n                    <Col span={12} offset={6}>\r\n                        <Card title=\"Level Selections\" bordered={false}>\r\n                            <Row gutter={16}>\r\n                                {\r\n                                    level.map(lv => {\r\n                                        return (\r\n                                            <Col key={lv} span={12}>\r\n                                                <Button value={lv} type=\"primary\" block\r\n                                                    onClick={(e) => this.onSelectLevel(lv, e)}>\r\n                                                    {lv}\r\n                                                </Button>\r\n                                            </Col>\r\n                                        )})    \r\n                                }\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSelectLevel = (lv) => {\r\n        this.props.onSelectLevel(lv);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport class Cell extends React.Component {\r\n\r\n    getValue() {\r\n        const { value } = this.props;\r\n\r\n        if (!value.isRevealed) {\r\n            return null;\r\n        }\r\n        if (value.isMine) {\r\n            return \"💣\";\r\n        }\r\n        if (value.neighbour === 0) {\r\n            return null;\r\n        }\r\n        return value.neighbour;\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        let className = 'cell ' +\r\n            (value.isRevealed ? \"\" : \"hidden\") +\r\n            (value.isMine ? \" s-mine\" : \"\");\r\n        return (\r\n            <div\r\n                onClick={(e) => this.onRevealCell(value, e)}\r\n                className={className}\r\n            >\r\n                {this.getValue()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onRevealCell = (cell) => {\r\n        this.props.onRevealCell(cell);\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class Clock extends React.Component {\r\n    state = {\r\n        second: 0\r\n    }\r\n\r\n    startTimer() {\r\n        this.timer = setInterval(() => {\r\n            this.setState({ second: this.state.second + 1 });\r\n        }, 1000)    \r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(this.timer);\r\n        this.setState({ second: 0 });\r\n    }\r\n\r\n    convertTime() {\r\n        const d = Number(this.state.second);\r\n        var h = Math.floor(d / 3600);\r\n        var m = Math.floor(d % 3600 / 60);\r\n        var s = Math.floor(d % 3600 % 60);\r\n    \r\n        var hDisplay = h < 10 ? `0${h}` : h > 0 ? h : \"00\";\r\n        var mDisplay = m < 10 ? `0${m}` : m > 0 ? m : \"00\";\r\n        var sDisplay = s < 10 ? `0${s}` : s > 0 ? s : \"00\";\r\n        return `${hDisplay}:${mDisplay}:${sDisplay}`; \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.convertTime()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Cell } from './Cell';\r\nimport { Clock } from './Clock';\r\nimport { Row, Col } from 'antd';\r\n\r\n\r\nexport class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boardData: this.initBoardData(this.props.width, this.props.height, this.props.mines),\r\n            gameStatus: \"Game in progress\",\r\n            mines: this.props.mines,\r\n            startGame: false,\r\n            second: 0\r\n        };\r\n    \r\n        this.clock = React.createRef();\r\n    }\r\n\r\n    initBoardData(w, h, mines) {\r\n        let board = this.createBoardWithMines(w, h, mines);\r\n        board = this.getNeighbours(board, w, h);\r\n        return board;\r\n    }\r\n\r\n    createBoardWithMines(w, h, mines) {\r\n        let data = [];\r\n        for (let i = 0; i < w; i++) {\r\n            data.push([]);\r\n            for (let j = 0; j < h; j++) {\r\n                data[i][j] = {\r\n                    x: i,\r\n                    y: j,\r\n                    isMine: false,\r\n                    neighbour: 0,\r\n                    isRevealed: false,\r\n                    isEmpty: false,\r\n                };\r\n            }\r\n        }\r\n        mines.map(m => {\r\n            data[m.x][m.y].isMine = true;\r\n            return m;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    getNeighbours(board, w, h) {\r\n        let updatedBoard = board;\r\n\r\n        for (let i = 0; i < w; i++) {\r\n            for (let j = 0; j < h; j++) {\r\n                if (!board[i][j].isMine) {\r\n                    let mine = 0;\r\n                    const neightbourList = this.surfingBoard(board[i][j].x, board[i][j].y, board);\r\n                    neightbourList.map(n => {\r\n                        if (n.isMine) {\r\n                            mine++;\r\n                        }\r\n                        return n;\r\n                    });\r\n                    if (mine === 0) {\r\n                        updatedBoard[i][j].isEmpty = true;\r\n                    }\r\n                    updatedBoard[i][j].neighbour = mine;\r\n                }\r\n            }\r\n        }\r\n        return updatedBoard;\r\n    }\r\n\r\n    surfingBoard(x, y, board) {\r\n        const neightbourList = [];\r\n        for (let xOffset = -1; xOffset <= 1; xOffset++) {\r\n            for (let yOffset = -1; yOffset <= 1; yOffset++) {\r\n                let i = x + xOffset;\r\n                let j = y + yOffset;\r\n                if (i > -1 && i < this.props.width && j > -1 && j < this.props.height) {\r\n                    let neighbour = board[i][j];\r\n                    neightbourList.push(neighbour);\r\n                }\r\n            }\r\n        }\r\n        return neightbourList;\r\n    }\r\n\r\n    revealAllBoard() {\r\n        let updatedData = this.state.boardData;\r\n        updatedData.map((datarow) => {\r\n            datarow.map((dataitem) => {\r\n                dataitem.isRevealed = true;\r\n                return dataitem;\r\n            });\r\n            return datarow;\r\n        });\r\n        this.setState({\r\n            boardData: updatedData\r\n        });\r\n    }\r\n\r\n    renderBoard(data) {\r\n        return data.map((datarow) => {\r\n            return datarow.map((dataitem) => {\r\n            return (\r\n                <div key={ dataitem.x * datarow.length + dataitem.y }>\r\n                    <Cell\r\n                    onRevealCell={() => this.handleCellClick(dataitem.x, dataitem.y)}\r\n                    value={ dataitem }\r\n                    />\r\n                { (datarow[datarow.length - 1] === dataitem) ? <div className=\"clear\" /> : \"\" }\r\n                </div>);\r\n            })\r\n        });\r\n    }\r\n\r\n    revealEmpty(x, y, data) {\r\n        let area = this.surfingBoard(x, y, data);\r\n        area.map(value => {\r\n            if (!value.isRevealed && (value.isEmpty || !value.isMine)) {\r\n            data[value.x][value.y].isRevealed = true;\r\n                if (value.isEmpty) {\r\n                    this.revealEmpty(value.x, value.y, data);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    getHidden = (updatedData) => {\r\n        let mineArray = [];\r\n\r\n        updatedData.map(datarow => {\r\n        datarow.map((dataitem) => {\r\n            if (!dataitem.isRevealed) {\r\n                mineArray.push(dataitem);\r\n            }\r\n            return dataitem;\r\n        });\r\n            return datarow;\r\n    });\r\n    return mineArray;\r\n    }\r\n\r\n    handleCellClick(x, y) {\r\n        if (this.state.gameStatus === \"Game in progress\") {\r\n            this.setState({ startGame: true });\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (this.state.startGame && this.clock.current.state.second === 0 && !this.clock.current.timer) {\r\n                this.clock.current.startTimer();\r\n            }\r\n        }, 0);\r\n\r\n        if (this.state.boardData[x][y].isRevealed) {\r\n            return;\r\n        }\r\n        \r\n        if (this.state.boardData[x][y].isMine) {\r\n            this.setState({ gameStatus: \"Lost\" });\r\n            this.revealAllBoard();\r\n            setTimeout(() => {\r\n                this.onShowResult(this.state.gameStatus);\r\n            }, 0);\r\n        }\r\n\r\n        let updatedData = this.state.boardData;\r\n        updatedData[x][y].isRevealed = true;\r\n\r\n        if (updatedData[x][y].isEmpty) {\r\n            updatedData = this.revealEmpty(x, y, updatedData);\r\n        }\r\n\r\n        if (this.getHidden(updatedData).length === this.props.mines) {\r\n            this.setState({ gameStatus: \"Win\" });\r\n            this.revealBoard();\r\n            setTimeout(() => {\r\n                this.onShowResult(this.state.gameStatus);\r\n            }, 0);\r\n        }\r\n\r\n        this.setState({\r\n            boardData: updatedData\r\n        });\r\n    }\r\n\r\n    onShowResult = (gameStatus) => {\r\n        this.props.onShowResult(gameStatus, this.clock.current.convertTime());\r\n        this.setState({ startGame: false })\r\n        this.clock.current.stopTimer();\r\n    }\r\n\r\n    onReplay = () => {\r\n        this.props.onReplay();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"board\">\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={12}>\r\n                        <div className=\"game-info\">\r\n                            <span className=\"info\">Time</span>\r\n                            <h1><Clock ref={this.clock} /></h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"center\">\r\n                    <Col span={this.props.mines.length === 10 ? 6 : 10}>\r\n                        { this.renderBoard(this.state.boardData) }\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Button, Modal } from 'antd';\r\n\r\n\r\nexport class Result extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        visible: false,\r\n        content: this.props.content\r\n    };\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    onReplay = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n        this.props.onReplay();\r\n    };\r\n\r\n    onBackToHome = () => {\r\n        this.setState({ visible: false });\r\n        this.props.onBackToHome();\r\n    };\r\n    \r\n    render(){\r\n        const { visible, loading, content } = this.props;\r\n        return (\r\n            \r\n            <div>\r\n                <Modal\r\n                    visible={visible}\r\n                    title=\"Result\"\r\n                    onOk={this.onReplay}\r\n                    onCancel={this.onViewBoard}\r\n                    footer={[\r\n                    <Row key='result-modals' gutter={10}>\r\n                        <Col key='replay' span={6}>\r\n                            <Button key=\"back\" onClick={this.onReplay}>\r\n                                New Game\r\n                            </Button>          \r\n                        </Col>\r\n                        <Col key='viewboard' span={6}>\r\n                            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.onBackToHome}>\r\n                                Home Page\r\n                            </Button>               \r\n                        </Col>\r\n                    </Row>\r\n                    ]}>\r\n                    <p>{ content }</p>\r\n                </Modal>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Spin, Row, Col } from 'antd';\r\nimport  { LevelSelection, Board, Result }  from './components';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.modal = React.createRef();\r\n    this.state = {\r\n      level: ['beginner', 'advantage'],\r\n      selectedLevel: '',\r\n      modalVisible: false,\r\n      modalContent: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  renderContent = () => {\r\n    const {\r\n      level,\r\n      selectedLevel,\r\n      modalVisible,\r\n      modalContent\r\n      } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        \r\n        <Row type=\"flex\" justify=\"center\">\r\n          <Col span={24} >\r\n            { !this.state.selectedLevel ? <Card title='Minesweeper'>\r\n              <LevelSelection level={level} onSelectLevel={this.onSelectLevel}/>\r\n              </Card> : <div className=\"game\">\r\n                <Board width={ selectedLevel === 'beginner' ? 9 : selectedLevel === 'advantage' ? 16 : 0 }\r\n                    height={ selectedLevel === 'beginner' ? 9 : selectedLevel === 'advantage' ? 16 : 0 }\r\n                  mines={this.props.mineList} onShowResult={this.onShowResult}></Board>\r\n            </div> }\r\n          </Col>\r\n        </Row>\r\n        <Result ref={this.modal} visible={modalVisible} content={modalContent}\r\n          onReplay={this.onReplay} onBackToHome={this.onBackToHome}></Result>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { loading } = this.props;\r\n    const content = this.renderContent();\r\n  \r\n    return (\r\n      <div className='App'>\r\n      {\r\n        loading ? <div className='spin'> <Spin> {this.renderContent()} </Spin> </div> : <div className='App'> {content} </div>\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSelectLevel = (lv) => {\r\n    this.props.getMines(lv);\r\n    this.setState({ selectedLevel: lv });\r\n  }\r\n\r\n  onShowResult = (status, time) => {\r\n    this.setState({\r\n      modalVisible: true,\r\n      modalContent: status === 'Win' ? `You won the game in: ${time}` : `You lost the game in: ${time}`});\r\n  }\r\n\r\n  onReplay = () => {\r\n    this.setState({\r\n      modalVisible: false,\r\n      modalContent: ''\r\n    });\r\n    this.onSelectLevel(this.state.selectedLevel);\r\n  }\r\n\r\n  onBackToHome = () => {\r\n    this.props.clearMines();\r\n    this.setState({\r\n      modalVisible: false,\r\n      modalContent: '',\r\n      selectedLevel: ''\r\n    });\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.loading,\r\n    mineList: state.mineList,\r\n    error: state.error,\r\n    state : state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getMines: (lv) => dispatch({ type: 'GET_MINES', lv }),\r\n    clearMines: () => dispatch({ type: 'CLEAR_MINES'})\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const GET_MINES = 'GET_MINES';\r\nconst GET_MINES_SUCCESS = 'GET_MINES_SUCCESS';\r\nconst GET_MINES_FAIL = 'GET_MINES_FAIL';\r\n\r\nconst CLEAR_MINES = 'CLEAR_MINES';\r\nconst CLEAR_MINES_SUCCESS = 'CLEAR_MINES_SUCCESS';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: false,\r\n  error: '',\r\n  mineList: []\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MINES:\r\n      return { ...state, loading: true };\r\n    case GET_MINES_SUCCESS:\r\n      return { ...state, loading: false, mineList : action.data };\r\n    case GET_MINES_FAIL:\r\n      return { ...state, loading: false, error: action.msg };\r\n    case CLEAR_MINES:\r\n      return { ...state, loading: true };\r\n      case CLEAR_MINES_SUCCESS:\r\n      return { ...state, loading: false, mineList : action.data };\r\n    default:\r\n      return state;\r\n  }\r\n}","import axios from 'axios';\r\n\r\nexport const getMinesApi = (level) => {\r\n  let size = level && level === 'beginner' ? 9 : 16;\r\n  let mines = level && level === 'beginner' ? 10 : 40;\r\n\r\n  return axios({\r\n    method: 'get',\r\n    url: `https://tiki-minesweeper.herokuapp.com/getMines?size=${size}&mines=${mines}`\r\n  });\r\n}","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { getMinesApi } from './api';\r\n\r\nexport function* watcherSaga() {\r\n  yield takeLatest('GET_MINES', getMines);\r\n  yield takeLatest('CLEAR_MINES', clearMines);\r\n}\r\n\r\n\r\nfunction* getMines({ lv }) {\r\n  const response = yield call(getMinesApi, lv);\r\n  if  (response.data.data && response.data.msg === 'success'){\r\n    yield put({ type: 'GET_MINES_SUCCESS', data : response.data.data });\r\n  }  else{\r\n    yield put({ type: 'GET_MINES_FAIL', error : response.data.msg });\r\n  }\r\n}\r\n\r\nfunction* clearMines() {\r\n  const mineList = [];\r\n    yield put({ type: 'CLEAR_MINES_SUCCESS', data : mineList });\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { reducer } from './redux';\r\nimport { watcherSaga } from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(\r\n  reducer,\r\n  compose(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(watcherSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}